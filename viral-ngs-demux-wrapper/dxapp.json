{
  "name": "viral-ngs-demux-wrapper",
  "title": "illumina-demux wrapper",
  "summary": "Wrapper around viral-ngs-demux to perform BCL conversion and de-multiplexing from Illumina RUN directory using viral-ngs' custom demux script",
  "dxapi": "1.0.0",
  "version": "0.0.1",
  "categories": [],
  "inputSpec": [
    {
      "name": "resources",
      "class": "file",
      "patterns": ["viral-ngs-*.resources.tar.gz"],
      "label": "Viral-ngs resource tarball",
      "default": {"$dnanexus_link": "file-BvZJYJQ0kFP9VG4JvkKkY97q"}
    },
    {
      "name": "upload_sentinel_record",
      "class": "record",
      "label": "Incremental upload sentinel record",
      "optional": true,
      "help": "The sentinel record produced by the the incremental_upload.sh script. When this record is closed it indicates that the upload is complete and demux can begin."
    },
    {
      "name": "run_tarballs",
      "class": "array:file",
      "label": "Tarball(s) that reconstitute the RUN folder",
      "optional": true,
      "help": "Tarball(s), supplied in the order that they should be untarred in, which reconstitute the RUN folder of a single sequencing run"
    },
    {
      "name": "demux_applet",
      "class": "applet",
      "label": "DNAnexus applet for viral-ngs-demux",
      "patterns": ["viral-ngs-demux"],
      "help": "The DNAnexus viral-ngs-demux applet."
    },
    {
      "name": "metrics_fn",
      "class": "string",
      "label": "Metric filename",
      "help": "Filename for output ExtractIlluminaBarcodes metrics file. Default is metrics.txt",
      "default": "metrics.txt"
    },
    {
      "name": "per_sample_output",
      "class": "boolean",
      "label": "Output samples in sub folders",
      "help": "Create subfolder for each sample output file",
      "default": false
    },
    {
      "name": "sample_sheet",
      "label": "Sample Sheet",
      "class": "file",
      "help": "Override SampleSheet. Input tab or CSV file w/header and four named columns:barcode_name, library_name, barcode_sequence_1, barcode_sequence_2. Default is to look for a SampleSheet.csv in the inDir.",
      "optional": true
    },
    {
      "name": "flowcell",
      "label": "Flowcell ID",
      "class": "string",
      "help": "Override flowcell ID (default: read from RunInfo.xml)",
      "optional": true
    },
    {
      "name": "lanes",
      "class": "array:int",
      "label": "Lane(s) to perform demux",
      "help": "If not specified, demux will be performed over all lane(s)",
      "optional": true
    },
    {
      "name": "read_structure",
      "label": "Read structure",
      "class": "string",
      "help": "Override read structure (default: read from RunInfo.xml).",
      "optional": true
    },
    {
      "name": "sequencing_center",
      "label": "Sequencing Center",
      "class": "string",
      "help": "Sequencing Center Name",
      "optional": true
    },
    {
      "name": "is_hiseq",
      "label": "Run is from a HiSeq machine",
      "class": "boolean",
      "help": "Set to true if RUN is from a HiSeq machine and require additional computational resource",
      "default": false
    },
    {
      "name": "advanced_opt",
      "label": "Advanced options",
      "class": "string",
      "help": "Additional advanced parameter to be passed to illumina.py",
      "optional": true
    }
  ],
  "outputSpec": [
    {
      "name": "bams",
      "label": "Demuxed Bam files",
      "help": "Unmapped bam files from demultiplexing",
      "class": "array:file"
    },
    {
      "name": "metrics",
      "label": "Metrics file",
      "help": "ExtractIlluminaBarcodes metrics file",
      "class": "array:file"
    }
  ],
  "runSpec": {
    "interpreter": "bash",
    "file": "src/viral-ngs-demux-wrapper.sh",
    "systemRequirements": {
      "*": {
        "instanceType": "mem1_ssd1_x2"
      }
    },
    "execDepends": [
      {"name": "default-jre-headless"},
      {"name": "python-numpy"},
      {"name": "python-scipy"},
      {"name": "libxml2-utils"}
    ],
    "distribution": "Ubuntu",
    "release": "12.04"
  },
  "authorizedUsers": []
}
